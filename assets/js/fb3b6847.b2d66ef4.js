"use strict";(self.webpackChunklab_github_copilot=self.webpackChunklab_github_copilot||[]).push([[621],{4212:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"GitHub Coding Agent/coding-agent-ex","title":"GitHub Copilot Coding Agent","description":"Example","source":"@site/docs/04-GitHub Coding Agent/02-coding-agent-ex.md","sourceDirName":"04-GitHub Coding Agent","slug":"/caexample","permalink":"/lab-github-copilot/caexample","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_label":"Example","slug":"/caexample"},"sidebar":"tutorialSidebar","previous":{"title":"Prerequisites","permalink":"/lab-github-copilot/caprerequisites"},"next":{"title":"Links","permalink":"/lab-github-copilot/Links"}}');var i=t(4848),r=t(8453);const l={sidebar_label:"Example",slug:"/caexample"},a="GitHub Copilot Coding Agent",s={},c=[{value:"Example",id:"example",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"github-copilot-coding-agent",children:"GitHub Copilot Coding Agent"})}),"\n",(0,i.jsx)(n.h2,{id:"example",children:"Example"}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"This document is work in progress"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Create Issue"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Assign to Copilot"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'Need an API to manage ColorItems.\n\nTechnology to use is dotnet 9.0 and C#\n\n---\n\nCreate an API project - also need a MSTest unit Test project.\nNeed a project reference from Test project to API project.\nThe files should be called "ColorsAPI".  \n \n---\n\nThe routes needed in the API are :\n\n- an API to return all colors.   \n- an API to insert a new color.\n- an API to return a random color.\n\n---\n\nInitialize the ColorItems list to Red, Yellow and Black\n\n---\n\nThe ColorItems data model should include Name and HexCode.\n\n---\n\nvalidate Hexcode when API route inserts a new color \n\n'})})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>a});var o=t(6540);const i={},r=o.createContext(i);function l(e){const n=o.useContext(r);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);