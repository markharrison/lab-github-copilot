"use strict";(self.webpackChunklab_github_copilot=self.webpackChunklab_github_copilot||[]).push([[208],{8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>r});var o=t(6540);const i={},s=o.createContext(i);function a(e){const n=o.useContext(s);return o.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(s.Provider,{value:n},e.children)}},9667:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>u});const o=JSON.parse('{"id":"GitHub Coding Agent/coding-agent-ex2","title":"GitHub Copilot Coding Agent","description":"Example - Create Audio JS library","source":"@site/docs/04-GitHub Coding Agent/03-coding-agent-ex2.md","sourceDirName":"04-GitHub Coding Agent","slug":"/caexample2","permalink":"/lab-github-copilot/caexample2","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_label":"Example JS","slug":"/caexample2"},"sidebar":"tutorialSidebar","previous":{"title":"Example .NET","permalink":"/lab-github-copilot/caexample"},"next":{"title":"Links","permalink":"/lab-github-copilot/Links"}}');var i=t(4848),s=t(8453);const a={sidebar_label:"Example JS",slug:"/caexample2"},r="GitHub Copilot Coding Agent",l={},u=[{value:"Example - Create Audio JS library",id:"example---create-audio-js-library",level:2}];function d(e){const n={admonition:"admonition",code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"github-copilot-coding-agent",children:"GitHub Copilot Coding Agent"})}),"\n",(0,i.jsx)(n.h2,{id:"example---create-audio-js-library",children:"Example - Create Audio JS library"}),"\n",(0,i.jsx)(n.admonition,{type:"warning",children:(0,i.jsx)(n.p,{children:"This document is work in progress"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Create Issue"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Assign to Copilot"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"I need an Audio JavaScript library for use in simple web games. Called AudioMark.\n\ncreate index.html - for a test page.\ncreate test.js - for test JavaScript used by index.html ... don't want to pollute the main library with test functionality\ncreate audio.js - for the audio library . export class AudioMark\n\nLicense MIT\n\nProvide detailed documentation how to use the library in the audiomark.md\nOverview documentation in readme.md\n\nerrors should be displayed using alerts()\n---\nfunctionality need for the audio library to include :\nUse Web Audio API ... no fall back is needed. Will only be using modern browsers . Definitely Microsoft Edge - probably others.\nNeeds to be able to play the following:\n- SFX (Sound Effects): Short, low-latency, often triggered frequently. fast, fire-and-forget.\n- Music: Longer, streamed tracks with full playback controls.\nAll sounds must be able to be played simultaneously\nNeed support for pre-loading audio files.   Also support for unloading.\nSupport for volume - values from 0 (off) to 100 (full volume) (user interface config of required volume is outside of this library)\n- master volume / music volume / sfx volume\nCan change background music with a nice transition blend (music 1 volume drops / music 2 volume increases to create a transition).\nHandle any music block by some browsers - user needs to interact. Audio Context Resume Handling ?\nNeed to support MP3 and WAV. No other codecs needed.\nsupport for Pause / Resume / Stop\nsupport for looping.\nsupport for fade-in/fade-out\nsupport for transition from one music track to another music track.   Nicely blended.\nany clean-up - if needed .\n---\nfunctionality need for the test page to include :\nnice looking UI experience\ninitialise audiomark library\nload music1 and music2 files - file selectors to upload from disk\nload sfx1, sfx2, sfx3 files - file selectors to upload from disk\nunload files\n\nplay music1 / music2 files\nplay sfx1, sfx2, sfx3 files ..\nstart / stop play\npause / resume\nclean-up\ntest loop\ntest simultaneous playing\nSwitch music track being played - enable smooth transitions.  Able to adjust transition time (1 to 10 seconds)\nvolume controls master / music / effects\nDetailed action log\n\n\n"})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);