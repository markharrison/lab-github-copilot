"use strict";(self.webpackChunklab_github_copilot=self.webpackChunklab_github_copilot||[]).push([[186],{551:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/test2-bab50a00ab990b4fad14656a747becdc.png"},936:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/test5-1e03a57b751be00c436413c8bbca9fb0.png"},2915:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/test6-36649a169461490a9f9b88e7c98234bc.png"},2977:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/test4-25504e52ab7b4dc19503b8c7b7ec0ac6.png"},3516:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/test1-70a0c660f7e332dfe017919b6fbdd25c.png"},4766:(e,t,s)=>{s.d(t,{A:()=>n});const n=s.p+"assets/images/test3-3a4c0da61905bbf996784d9d189686c9.png"},8453:(e,t,s)=>{s.d(t,{R:()=>l,x:()=>r});var n=s(6540);const i={},a=n.createContext(i);function l(e){const t=n.useContext(a);return n.useMemo(function(){return"function"==typeof e?e(t):{...t,...e}},[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),n.createElement(a.Provider,{value:t},e.children)}},8764:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>h,frontMatter:()=>l,metadata:()=>n,toc:()=>o});const n=JSON.parse('{"id":"Copilot for Business/unit-tests","title":"Unit Tests","description":"There is one part of development that can be quite tedious - creating unit tests.  In this section we shall use GitHub Copilot to help.","source":"@site/docs/02-Copilot for Business/04-unit-tests.md","sourceDirName":"02-Copilot for Business","slug":"/unit-test","permalink":"/lab-github-copilot/unit-test","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":4,"frontMatter":{"sidebar_label":"Unit Tests","slug":"/unit-test"},"sidebar":"tutorialSidebar","previous":{"title":"Develop API WebApp","permalink":"/lab-github-copilot/dev-api"},"next":{"title":"Infrastructure as Code","permalink":"/lab-github-copilot/infrastructure-as-code"}}');var i=s(4848),a=s(8453);const l={sidebar_label:"Unit Tests",slug:"/unit-test"},r="Unit Tests",c={},o=[{value:"Create unit test",id:"create-unit-test",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"unit-tests",children:"Unit Tests"})}),"\n",(0,i.jsx)(t.p,{children:"There is one part of development that can be quite tedious - creating unit tests.  In this section we shall use GitHub Copilot to help."}),"\n",(0,i.jsx)(t.h2,{id:"create-unit-test",children:"Create unit test"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Switch to Test project and open ",(0,i.jsx)(t.code,{children:"UnitTest1.cs"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Ask Copilot Chat the following:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-text",children:"Write a set of unit tests using MSTest to validate the ColorUtilities.ValidateHexCode function.\nTest all scenarios, including edge cases and error conditions.\nInclude tests for both valid and invalid hex codes.\nMust always commence with a # character.\nCover both 3-character and 6-character hex code formats (both lengths are considered valid).\nAlways write each test case as a separate method for clarity and maintainability.\n"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Save the file generated.  Delete any redundant test files."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"alttext",src:s(3516).A+"",width:"1707",height:"841"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Switch to Test Explorer and hit refresh to compile the tests"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"alttext",src:s(551).A+"",width:"1707",height:"841"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Use Test Explorer panel in VS Code to run the tests"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Refresh to build the tests"}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Run the tests"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"The tests fail when passing a 3 character hexcode.  The validation routine is saying its invalid which is wrong."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"alttext",src:s(4766).A+"",width:"1707",height:"841"})}),"\n",(0,i.jsx)(t.p,{children:"The tests faile when passing a null.  An exception has occured as the program has not catered for this."}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"alttext",src:s(2977).A+"",width:"1707",height:"841"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Open the file ",(0,i.jsx)(t.code,{children:"ColorUtilities.cs"})]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Use Copilot to fix the validation routine.  Select the code and ask Chat:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{className:"language-text",children:"Fix this code.  \nMake it resilient. \nBoth #3 and #6 character hex codes are valid.\n"})}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"alttext",src:s(936).A+"",width:"1707",height:"841"})}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Re-run unit tests ... make sure they now all pass."}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{alt:"alttext",src:s(2915).A+"",width:"1707",height:"841"})})]})}function h(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);