"use strict";(self.webpackChunklab_github_copilot=self.webpackChunklab_github_copilot||[]).push([[958],{915:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/devapi12-9753a252c852f44ec13fcab08769066e.png"},917:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/run1-80226d78425172cccb83a854ccb8e5e7.png"},977:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/devapi10-f3a0f88c55f8a012f1f2d700d4c82611.png"},1082:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/devapi13-9bdb36513c228a6d286593d6373b5df0.png"},1281:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/run5-34bb5e515ceceb48707cdc3182074269.png"},1336:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/run4-74e4023203ae6be357fc8c9d12d8a3f9.png"},1973:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/devapi1-7f75284cb611cb505273ce5a34581340.png"},2855:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/run3-84572ad6966f99762db304b624b6cdd6.png"},2935:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/devapi3-9616e0f860d62455187b026e50baedd1.png"},3043:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/devapi7-b7552870011e74266c45bc3d83428285.png"},3141:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/devapi14-2aa232bf1ef046b0544f5904cc287e6c.png"},4622:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/devapi2-a717b0756c69e5cded83ec950eeda9e1.png"},5166:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/run2-801188faa2ebfcbc914fa457d42d6007.png"},5325:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/devapi9-536a84c7b3fdaf5f9f4ab655abebf463.png"},5380:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/devapi8-fa091ae6e6ddbb20b6fef1316756d469.png"},5466:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/devapi6-b6101b84e5981286d651923fc0eb6611.png"},5633:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/devapi5-8132642fcaab0fb2df561849bb5046ce.png"},7768:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/devapi4-ed365dbc5f4ee7b2515ffa937a6a1a3e.png"},8453:(e,n,t)=>{t.d(n,{R:()=>d,x:()=>o});var s=t(6540);const i={},l=s.createContext(i);function d(e){const n=s.useContext(l);return s.useMemo(function(){return"function"==typeof e?e(n):{...n,...e}},[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),s.createElement(l.Provider,{value:n},e.children)}},8642:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>d,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Copilot for VSCode/dev-api","title":"Develop API WebApp","description":"The objective is to create an API WebApp for handling color objects.","source":"@site/docs/02-Copilot for VSCode/03-dev-api.md","sourceDirName":"02-Copilot for VSCode","slug":"/dev-api","permalink":"/lab-github-copilot/dev-api","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_label":"Develop API WebApp","slug":"/dev-api"},"sidebar":"tutorialSidebar","previous":{"title":"Getting started","permalink":"/lab-github-copilot/start"},"next":{"title":"Unit Tests","permalink":"/lab-github-copilot/unit-test"}}');var i=t(4848),l=t(8453);const d={sidebar_label:"Develop API WebApp",slug:"/dev-api"},o="Develop API WebApp",a={},c=[{value:"Start with nothing",id:"start-with-nothing",level:2},{value:"Scaffold the basic solution",id:"scaffold-the-basic-solution",level:2},{value:"Add data model",id:"add-data-model",level:2},{value:"Add API routes",id:"add-api-routes",level:2},{value:"Add utility function",id:"add-utility-function",level:2},{value:"Add Swagger UI",id:"add-swagger-ui",level:2},{value:"Run the API WebApp",id:"run-the-api-webapp",level:2}];function r(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,l.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"develop-api-webapp",children:"Develop API WebApp"})}),"\n",(0,i.jsx)(n.p,{children:"The objective is to create an API WebApp for handling color objects."}),"\n",(0,i.jsx)(n.h2,{id:"start-with-nothing",children:"Start with nothing"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Create empty folder and open Visual Studio Code in that folder."}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-powershell",children:"mkdir colorsapi\ncd colorsapi\ndir\ncode . \n\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(1973).A+"",width:"1280",height:"495"})}),"\n",(0,i.jsx)(n.h2,{id:"scaffold-the-basic-solution",children:"Scaffold the basic solution"}),"\n",(0,i.jsx)(n.p,{children:"Lets use GitHub Copilot Chat to help scaffold a basic API WebApp.  The better the prompt, the better suggestion returned by GitHub Copilot."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"From the previous section, we have already started VSCode and opened an empty folder."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Ask Copilot Chat the following."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:'I want to create dotnet 9.0 project using webapi template  - also need a MSTest unit Test project.\nI need a project reference from Test project to API project.\nThe files should be called "ColorsAPI".  \nList together the dotnet commands to scaffold a solution. \n'})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alt text",src:t(4622).A+"",width:"1707",height:"848"})}),"\n",(0,i.jsx)(n.p,{children:"Response will be something like this :"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"dotnet new sln -n ColorsAPI\ndotnet new webapi -n ColorsAPI --framework net9.0\ndotnet new mstest -n ColorsAPI.Tests --framework net9.0\ndotnet sln ColorsAPI.sln add ColorsAPI/ColorsAPI.csproj\ndotnet sln ColorsAPI.sln add ColorsAPI.Tests/ColorsAPI.Tests.csproj\ndotnet add ColorsAPI.Tests reference ColorsAPI/ColorsAPI.csproj\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"There is an icon to copy the chat text returned from Copilot."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Within VSCode open up terminal.  Paste and run commands suggested by Copilot Chat."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Notice the files created. Two projects (API and Test)."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(2935).A+"",width:"1707",height:"848"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Open Solution file - use F1 ",(0,i.jsx)(n.code,{children:".NET Open Solution"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(7768).A+"",width:"1707",height:"848"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Open ",(0,i.jsx)(n.code,{children:"Program.cs"})," - remove existing Routes & Model (things to do with weather)."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(5633).A+"",width:"1707",height:"848"})}),"\n",(0,i.jsx)(n.p,{children:"We now have our basic API skeleton code - we shall now add the logic for our Colors API."}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(5466).A+"",width:"1707",height:"848"})}),"\n",(0,i.jsx)(n.h2,{id:"add-data-model",children:"Add data model"}),"\n",(0,i.jsx)(n.p,{children:"We first define the schema for our ColorsItem object:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Switch to Agent mode ... option at bottom of Chat panel"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Ask Copilot Chat the following:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"Create file 'ColorsItem.cs' .\nAdd to this file a colors model called ColorsItem to include a name and hexcode.\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Click the button to ",(0,i.jsx)(n.code,{children:"Create file"})," and specify the location to be within the ColorsAPI project.  (sometimes you may need to create the file first)"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(3043).A+"",width:"1707",height:"848"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Switch back to ",(0,i.jsx)(n.code,{children:"Program.cs"})]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Ask Copilot Chat the following:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:'Intialize a list of type ColorsItem with  "red", "yellow", "black" \n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Insert the suggested code into ",(0,i.jsx)(n.code,{children:"Program.cs"})]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(5380).A+"",width:"1707",height:"848"})}),"\n",(0,i.jsx)(n.h2,{id:"add-api-routes",children:"Add API routes"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Ask Copilot Chat the following:"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"Using ColorsItem - create two API routes.\nFirst - an API to return all colors.   \nSecond - an API to insert a new color.\nUse .NET 9 minimal APIs\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(5325).A+"",width:"1707",height:"848"})}),"\n",(0,i.jsx)(n.p,{children:"You can also prompt using an inline comment"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"//add a route to return a random color\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Hit ",(0,i.jsx)(n.code,{children:"Tab"})," to accept , ",(0,i.jsx)(n.code,{children:"Esc"})," to decline."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(977).A+"",width:"1707",height:"848"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Hit ",(0,i.jsx)(n.code,{children:"Tab"})," to accept the suggestion.  Or use ",(0,i.jsx)(n.code,{children:"Alt ["})," and ",(0,i.jsx)(n.code,{children:"Alt ]"})," to view alternatives."]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"add-utility-function",children:"Add utility function"}),"\n",(0,i.jsx)(n.p,{children:"We shall now add some logic to validate the hexcode passed in the API call to add a new color."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Create file ",(0,i.jsx)(n.code,{children:"ColorUtilities.cs"})," and add code ."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Ask Copilot Chat the following."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"Create file `ColorUtilities.cs` and add code .\nI want a new static class called ColorUtilities.\nI want a ValidateHexCode function using Regex - add to static class ColorUtilities.\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Click the button to ",(0,i.jsx)(n.code,{children:"Create file"})," and specify the location to be within the ColorsAPI project.  (sometimes you may need to create the file first)"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Irrespective of the code suggested, for lab purposes only check for 6 character hexcodes - we will fix this later during testing,"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:'  string pattern = @"^#([A-Fa-f0-9]{6})$";   // 6 character \n  string pattern = @"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$";   // 3 or 6 character \n'})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Also, if present - remove any check for a null being passed - again, we will fix this later during testing."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Optional, try this inline comment:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"// function to test for shade of red\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(8936).A+"",width:"1707",height:"841"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Switch back to  ",(0,i.jsx)(n.code,{children:"Program.cs"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Add Hexcode validation to the Insert new Color route .  Might need encouragement / prompting to use our validation utility function."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-text",children:"// Validate the hex code before adding\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(915).A+"",width:"1707",height:"848"})}),"\n",(0,i.jsx)(n.h2,{id:"add-swagger-ui",children:"Add Swagger UI"}),"\n",(0,i.jsx)(n.p,{children:"Lets add the Swagger UI to our API application - this is a web interface that provides a visual interface for exploring and testing RESTful APIs."}),"\n",(0,i.jsx)(n.p,{children:"There are several steps involved, but GitHub Copilot Agent Mode will take care of them for us - making the whole process much simpler."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Switch to Agent Mode using the button at the bottom of the Chat panel."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Then, ask Copilot Chat the following:"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Add Swagger UI\n"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Accept any requests"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(1082).A+"",width:"1707",height:"848"})}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Check the code that has been added which implements the Swagger UI."}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(3141).A+"",width:"1707",height:"848"})}),"\n",(0,i.jsx)(n.h2,{id:"run-the-api-webapp",children:"Run the API WebApp"}),"\n",(0,i.jsx)(n.p,{children:"Our API code is now complete."}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Use F5 to run the application. The application should compile amd build successfully. Select C# . Select the ColorsAPI app to run."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"The console log will display the URL web address of the application"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"In a web browser access this URL but tack on /Swagger"}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(917).A+"",width:"1707",height:"848"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(5166).A+"",width:"1707",height:"832"})}),"\n",(0,i.jsx)(n.p,{children:"Use the Swagger UI to test the API application"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Get all Colors."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Add a new color - use valid hexcode."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Add a new color - use invalid hexcode ... check for error status code."}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Get a random color."}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(2855).A+"",width:"1707",height:"1392"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(1336).A+"",width:"1707",height:"1392"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"alttext",src:t(1281).A+"",width:"1707",height:"1392"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(r,{...e})}):r(e)}},8936:(e,n,t)=>{t.d(n,{A:()=>s});const s=t.p+"assets/images/devapi11-da82fbcf1c39823779111b03cf68fc4e.png"}}]);